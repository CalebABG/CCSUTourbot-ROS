------------------------------------------------------------
ROS Rqt_tf_tree broken:
- https://answers.ros.org/question/132946/rqt_graph-not-shown-in-window/

sudo pip uninstall pyparsing

pip install -Iv https://pypi.python.org/packages/source/p/pyparsing/pyparsing-1.5.7.tar.gz#md5=9be0fcdcc595199c646ab317c1d9a709

sudo pip install pydot

------------------------------------------------------------
Python Pip uninstall packages(Ubuntu 16.04):
- https://github.com/pypa/pip/issues/3776

wget https://pypi.python.org/packages/e7/a8/7556133689add8d1a54c0b14aeff0acb03c64707ce100ecd53934da1aa13/pip-8.1.2.tar.gz

tar -xzvf pip-8.1.2.tar.gz

cd pip-8.1.2

sudo python setup.py install


------------------------------------------------------------
Python PySerial package

if not already installed, install pyserial:
    - sudo pip install pyserial
        *make sure that the pip tool is for python2*

if when running the IMU ROS package, you get an error: "AttributeError: 'Serial' object has no attribute 'read_until'"
You may, for whatever reason, need to upgrade pyserial (even though the pyserial you install is the latest -_-)
    - sudo pip install pyserial --upgrade

------------------------------------------------------------
ROS Scan Tools Package Install

sudo apt-get install ros-kinetic-scan-tools

------------------------------------------------------------
Moving Source Files:

*Always use 'Copy To' command; DO NOT USE 'ctrl+c and ctrl+v' will make compiling a nightmare*

- When moving source files to ~/ros_ws/src, packages: 'razor_imu_9dof', 'ccsu_tourbot'
  will need to make python files executable:
	- cd to source directory of python files
	- then, sudo chmod +x *.py

------------------------------------------------------------
IMU Bias Calib/Bias Comp Package:

https://github.com/ros-perception/imu_pipeline

------------------------------------------------------------
SLAM GMapping Install

sudo apt-get install ros-kinetic-openslam-gmapping
git clone https://github.com/ros-perception/slam_gmapping.git


------------------------------------------------------------
Chrome Install

wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
sudo sh -c 'echo "deb https://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
sudo apt-get update
sudo apt-get install google-chrome-stable

------------------------------------------------------------
ROS Lecture Notes/Cheat sheets

https://www.ethz.ch/content/dam/ethz/special-interest/mavt/robotics-n-intelligent-systems/rsl-dam/ROS2017/lecture1.pdf
https://github.com/ros/cheatsheet/releases/download/0.0.1/ROScheatsheet_catkin.pdf
https://github.com/leggedrobotics/ros_best_practices/wiki

------------------------------------------------------------
Linux chmod for a folder and all of its subfolders and files

https://stackoverflow.com/questions/3740152/how-do-i-set-chmod-for-a-folder-and-all-of-its-subfolders-and-files

sudo chmod -R 755 /directory

------------------------------------------------------------
ROS Robot Pose EKF install

 cd ~/ros_ws/src
 git clone -b <ros-version> https://github.com/ros-planning/navigation/
 cd ~/ros_ws/src/navigation/robot_pose_ekf
 rosdep install robot_pose_ekf
 rosmake
 *after this, you wont be able to catkin_make or build your workspace.
 *the navigation folder is a collection of packages, and you've only built the robot_pose_ekf package.
 *move the navigation folder to another folder outside your "ros_ws" folder.
 *then move the robot_pose_ekf package back inside your "ros_ws/src" folder

------------------------------------------------------------
Python Linter plugin pip uninstall fix

https://github.com/pypa/pip/issues/524

------------------------------------------------------------
lsd_slam stuff

//video driver tools
sudo apt-get install v4l-utils

//dependencies for lsd_slam package
sudo apt-get install ros-indigo-libg2o ros-indigo-cv-bridge liblapack-dev libblas-dev freeglut3-dev libqglviewer-dev libsuitesparse-dev libx11-dev


------------------------------------------------------------
rf2o_laser_odometry: ROS package

//Needed libraries for it: Mobile Robot Programming Toolkit MRPT
sudo add-apt-repository ppa:joseluisblancoc/mrpt
sudo apt-get update
sudo apt-get install libmrpt-dev mrpt-apps

------------------------------------------------------------

//todo:
1. create bash scripts to run nodes and give permissions to devices/drivers
2. get lidar working
3. create slam mapping

------------------------------------------------------------


------------------------------------------------------------
*ROS NOTE* - ROS supports Python 2.7

// Python 3.* versions aren't officially supported

// useful site for ROS Stuff: http://www.rsl.ethz.ch/education-students/lectures/ros.html
------------------------------------------------------------


------------------------------------------------------------
Logic Analyzer Note

// when going to use software, cd to Logic folder in terminal
// then sudo ./Logic to run
// if the program isn't run as admin it won't be able to see
// the logic device

//
1.sudo chmod 666 /dev/ttyUSB0
2.sudo chmod 666 /dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0

------------------------------------------------------------


------------------------------------------------------------
Pycharm editor notes

*make sure you open the root folder for packages: ~/ros_ws*
*for the Python interpreter, select python2*

// create desktop launcher for all users
// cd /usr/share/applications
// look for "jetbrains-pycharm-ce.desktop"
// edit the desktop file and add bash -i -c (no quotes for actual insert) to the line which starts with "Exec="
------------------------------------------------------------


--------------------------------------------------------------------------------------------
// Checking that the controller works
*terminal window*:/dev/input/by-id$ cat usb-JTDGamepad_Controller_0152793-event-joystick
--------------------------------------------------------------------------------------------


------------------------------------------------------------
// xbox driver - gamepad/joystick/controller stuff

// remove the default driver before use
    sudo rmmod xpad

// install xbox driver if needed
    sudo apt-get update
    sudo apt-get install xboxdrv

// wired connection using xboxdrv
    sudo xboxdrv


// if using bluetooth
    // bluetooth slot is port 2, the second usb slot down from the green led indicator

    // need to change permissions for the port in order to access from python
    // look up udev rules for ports
        1. sudo chmod a+rw /dev/input/jsX
        2. sudo jstest /dev/input/js1
        3. cat /proc/bus/input/devices

    // Pairing:
        1. make pc discoverable (just in case need be for device)
        2. hold x + guide button on controller to set it to pairing mode
        3. select gamepad to pair and hit next and wait till it finishes configuring
        4. run in terminal: bluetoothctl
        5. type devices, copy the MAC for the gamepad
        6. type: trust MAC, then hit enter *replace the 'MAC' with the MAC for the gamepad
        7. type exit, to exit the bluetoothctl
        8. in regular terminal type: xinput list
        9. find the *id* of the gamepad and copy it
        10. type: xinput disable 'id', replace 'id' with the id of the gamepad to stop the gamepad from controlling the mouse
            // you can enable the input again by: xinput enable 'id'


// to check the interfaces use: lspci, lsusb

*use this command for testing, you shouldn't need to run xboxdrv if the controller is paired and connected*
// check which number corresponds to the event in the input folder use: evtest
    sudo xboxdrv --evdev /dev/input/event15
------------------------------------------------------------


------------------------------------------------------------
// install ros joy/joy_node if not installed
    sudo apt-get install ros-kinetic-joy
------------------------------------------------------------